<?php
/**
 * Eternizer.
 *
 * @copyright Michael Ueberschaer
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package Eternizer
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://www.webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.3 (http://modulestudio.de) at Fri Dec 30 18:01:17 CET 2011.
 */

/**
 * Mailz api base class
 */
class Eternizer_Api_Base_Mailz extends Zikula_AbstractApi
{
    /**
     * Get mailz plugins with type / title
     *
     * @param   $args['id']     int     optional, show specific one or all otherwise
     * @return  array
     */
    public function getPlugins($args)
    {
        $plugins = array();
        $plugins[] = array(
            'pluginid'    => 1,
            'module'      => 'Eternizer',
            'title'       => $this->__('3 newest entries'),
            'description' => $this->__('A list of the three newest entries.')
        );
        $plugins[] = array(
            'pluginid'    => 2,
            'module'      => 'Eternizer',
            'title'       => $this->__('3 random entries'),
            'description' => $this->__('A list of three random entries.')
        );
        return $plugins;
    }

    /**
     * Get content for plugins
     *
     * @param   $args['pluginid']       int         id number of plugin (internal id for this module, see getPlugins method)
     * @param   $args['params']         string      optional, show specific one or all otherwise
     * @param   $args['uid']            int         optional, user id for user specific content
     * @param   $args['contenttype']    string      h or t for html or text
     * @param   $args['last']           datetime    timtestamp of last newsletter
     * @return  array
     */
    public function getContent($args)
    {
        // $args is something like:
        // Array ( [uid] => 5 [contenttype] => h [pluginid] => 1 [nid] => 1 [last] => 0000-00-00 00:00:00 [params] => Array ( [] => ) ) 1
        $objectType = 'entry';

        $entityClass = 'Eternizer_Entity_' . ucfirst($objectType);
        $repository = $this->entityManager->getRepository($entityClass);

        $objectTemp = new $entityClass();
        $idFields = $objectTemp->get_idFields();

        $sortParam = '';
        if ($args['pluginid'] == 2) {
            $sortParam = 'RAND()';
        } elseif ($args['pluginid'] == 1) {
            if (count($idFields) == 1) {
                $sortParam = $idFields[0] . ' DESC';
            } else {
                foreach ($idFields as $idField) {
                    if (!empty($sortParam)) {
                        $sortParam .= ', ';
                    }
                    $sortParam .= $idField . ' ASC';
                }
            }
        }

        $resultsPerPage = 3;

        // get objects from database
        list($objectData, $objectCount) = $objectTemp->selectWherePaginated('' /*$this->filter*/, $sortParam, 1, $resultsPerPage);

        $view = Zikula_View::getInstance('Eternizer', true);

        //$data = array('sorting' => $this->sorting, 'amount' => $this->amount, 'filter' => $this->filter, 'template' => $this->template);
        //$view->assign('vars', $data);

        $view->assign('objectType', 'entry')
            ->assign('items', $objectData)
            ->assign($repository->getAdditionalTemplateParameters('api', array('name' => 'mailz')));

        if ($args['contenttype'] == 't') { /* text */
            return $view->fetch('mailz/itemlist_Entry_text.tpl');
        } else {
            //return $view->fetch('contenttype/itemlist_display.html');
            return $view->fetch('mailz/itemlist_Entry_html.tpl');
        }
    }

}
